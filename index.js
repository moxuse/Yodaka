// Generated by purs bundle 0.13.8
var PS = {};
(function(exports) {
  /* global exports */
  "use strict";

  exports.unsafeForeignProcedure = function(args) {
      return function (stmt) {
          return Function(wrap(args.slice()))();
          function wrap() {
              return !args.length ? stmt : 'return function (' + args.shift() + ') { ' + wrap() + ' };';
          }
      };
  };
})(PS["Data.Foreign.EasyFFI"] = PS["Data.Foreign.EasyFFI"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Foreign.EasyFFI"] = $PS["Data.Foreign.EasyFFI"] || {};
  var exports = $PS["Data.Foreign.EasyFFI"];
  var $foreign = $PS["Data.Foreign.EasyFFI"];
  var unsafeForeignFunction = function (args) {
      return function (expr) {
          return $foreign.unsafeForeignProcedure(args)("return " + (expr + ";"));
      };
  };
  exports["unsafeForeignFunction"] = unsafeForeignFunction;
  exports["unsafeForeignProcedure"] = $foreign.unsafeForeignProcedure;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn2"] = $foreign.runFn2;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Three.Util"] = $PS["Graphics.Three.Util"] || {};
  var exports = $PS["Graphics.Three.Util"];
  var Data_Foreign_EasyFFI = $PS["Data.Foreign.EasyFFI"];                
  var fpi = Data_Foreign_EasyFFI.unsafeForeignProcedure;
  var ffi = Data_Foreign_EasyFFI.unsafeForeignFunction;
  exports["ffi"] = ffi;
  exports["fpi"] = fpi;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Three.GeometryAddition"] = $PS["Graphics.Three.GeometryAddition"] || {};
  var exports = $PS["Graphics.Three.GeometryAddition"];
  var Graphics_Three_Util = $PS["Graphics.Three.Util"];                
  var createTorusGeometry = Graphics_Three_Util.ffi([ "radius", "tube", "radialSegments", "tubularSegments", "" ])("new THREE.TorusGeometry(radius, tube, radialSegments, tubularSegments)");
  exports["createTorusGeometry"] = createTorusGeometry;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Three.MaterialAddition"] = $PS["Graphics.Three.MaterialAddition"] || {};
  var exports = $PS["Graphics.Three.MaterialAddition"];
  var Graphics_Three_Util = $PS["Graphics.Three.Util"];                                                                     
  var createMeshStandard = Graphics_Three_Util.ffi([ "param", "" ])("new THREE.MeshStandardMaterial(param)");
  exports["createMeshStandard"] = createMeshStandard;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Three.Object3D"] = $PS["Graphics.Three.Object3D"] || {};
  var exports = $PS["Graphics.Three.Object3D"];
  var Graphics_Three_Util = $PS["Graphics.Three.Util"];
  var createMesh = function (dictMaterial) {
      return Graphics_Three_Util.ffi([ "geometry", "material", "" ])("new THREE.Mesh(geometry, material)");
  };
  exports["createMesh"] = createMesh;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Three.PostProcessing.PostEffect"] = $PS["Graphics.Three.PostProcessing.PostEffect"] || {};
  var exports = $PS["Graphics.Three.PostProcessing.PostEffect"];
  var Graphics_Three_Util = $PS["Graphics.Three.Util"];                                              
  var bloomEffect = Graphics_Three_Util.ffi([ "" ])("new THREE.BloomEffect({ luminanceThreshold: 0.5 })");
  exports["bloomEffect"] = bloomEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Three.Scene"] = $PS["Graphics.Three.Scene"] || {};
  var exports = $PS["Graphics.Three.Scene"];
  var Graphics_Three_Util = $PS["Graphics.Three.Util"];             
  var addObject = function (dictObject3D) {
      return Graphics_Three_Util.fpi([ "scene", "a", "" ])("scene.add(a)");
  };
  exports["addObject"] = addObject;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Yodaka.Port"] = $PS["Graphics.Yodaka.Port"] || {};
  var exports = $PS["Graphics.Yodaka.Port"];
  var Data_Foreign_EasyFFI = $PS["Data.Foreign.EasyFFI"];                                                                
  var globalPort = Data_Foreign_EasyFFI.unsafeForeignFunction([ "" ])("window.port");                                            
  var addEffectToPort = Data_Foreign_EasyFFI.unsafeForeignFunction([ "target", "" ])("window.port.postEffects.push(target)");
  exports["globalPort"] = globalPort;
  exports["addEffectToPort"] = addEffectToPort;
})(PS);
(function(exports) {
  "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Data_Symbol = $PS["Data.Symbol"];
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };                                                
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["insert"] = insert;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Yodaka.PostEffectTarget"] = $PS["Graphics.Yodaka.PostEffectTarget"] || {};
  var exports = $PS["Graphics.Yodaka.PostEffectTarget"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Builder = $PS["Record.Builder"];                
  var effect_ = Data_Symbol.SProxy.value;
  var createPETarget = function (dictPostEffect) {
      return function (eff) {
          return function (renderToScreen) {
              return Record_Builder.build(Record_Builder.insert()()(new Data_Symbol.IsSymbol(function () {
                  return "effect";
              }))(effect_)(eff))({
                  renderToScreen: renderToScreen
              });
          };
      };
  };
  exports["createPETarget"] = createPETarget;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Yodaka.Context"] = $PS["Graphics.Yodaka.Context"] || {};
  var exports = $PS["Graphics.Yodaka.Context"];
  var Graphics_Three_Scene = $PS["Graphics.Three.Scene"];
  var Graphics_Yodaka_Port = $PS["Graphics.Yodaka.Port"];
  var Graphics_Yodaka_PostEffectTarget = $PS["Graphics.Yodaka.PostEffectTarget"];                  
  var renderPE = function (dictPostEffect) {
      return function (renderToScreen) {
          return function (effect) {
              return function __do() {
                  var eff = effect();
                  return Graphics_Yodaka_Port.addEffectToPort(Graphics_Yodaka_PostEffectTarget.createPETarget()(eff)(renderToScreen))();
              };
          };
      };
  };
  var add = function (dictObject3D) {
      return function (obj) {
          return function __do() {
              var p = Graphics_Yodaka_Port.globalPort();
              var o = obj();
              return Graphics_Three_Scene.addObject()(p.scene)(o)();
          };
      };
  };
  exports["add"] = add;
  exports["renderPE"] = renderPE;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeUnionFn = function(r1, r2) {
    var copy = {};
    for (var k1 in r2) {
      if ({}.hasOwnProperty.call(r2, k1)) {
        copy[k1] = r2[k1];
      }
    }
    for (var k2 in r1) {
      if ({}.hasOwnProperty.call(r1, k2)) {
        copy[k2] = r1[k2];
      }
    }
    return copy;
  };
})(PS["Record.Unsafe.Union"] = PS["Record.Unsafe.Union"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Record.Unsafe.Union"] = $PS["Record.Unsafe.Union"] || {};
  var exports = $PS["Record.Unsafe.Union"];
  var $foreign = $PS["Record.Unsafe.Union"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];                
  var unsafeUnion = Data_Function_Uncurried.runFn2($foreign.unsafeUnionFn);
  exports["unsafeUnion"] = unsafeUnion;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Graphics.Yodaka.Renderable.Torus"] = $PS["Graphics.Yodaka.Renderable.Torus"] || {};
  var exports = $PS["Graphics.Yodaka.Renderable.Torus"];
  var Graphics_Three_GeometryAddition = $PS["Graphics.Three.GeometryAddition"];
  var Graphics_Three_MaterialAddition = $PS["Graphics.Three.MaterialAddition"];
  var Graphics_Three_Object3D = $PS["Graphics.Three.Object3D"];
  var Record_Unsafe_Union = $PS["Record.Unsafe.Union"];                
  var torusDefaultOpt = {
      color: 2200782,
      roughness: 0.3
  };
  var torus = function (opt) {
      var u = Record_Unsafe_Union.unsafeUnion(opt)(torusDefaultOpt);
      return function __do() {
          var g = Graphics_Three_GeometryAddition.createTorusGeometry(1.0)(0.5)(128.0)(256.0)();
          var m = Graphics_Three_MaterialAddition.createMeshStandard(u)();
          return Graphics_Three_Object3D.createMesh()(g)(m)();
      };
  };
  exports["torus"] = torus;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Effect_Console = $PS["Effect.Console"];
  var Graphics_Three_PostProcessing_PostEffect = $PS["Graphics.Three.PostProcessing.PostEffect"];
  var Graphics_Yodaka_Context = $PS["Graphics.Yodaka.Context"];
  var Graphics_Yodaka_Renderable_Torus = $PS["Graphics.Yodaka.Renderable.Torus"];                
  var main = function __do() {
      Effect_Console.log("You Compiled Main module")();
      Graphics_Yodaka_Context.add()(Graphics_Yodaka_Renderable_Torus.torus({}))();
      return Graphics_Yodaka_Context.renderPE()(true)(Graphics_Three_PostProcessing_PostEffect.bloomEffect)();
  };
  exports["main"] = main;
})(PS);
PS["Main"].main();